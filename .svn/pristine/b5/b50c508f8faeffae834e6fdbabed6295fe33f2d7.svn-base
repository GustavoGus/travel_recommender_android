/**
 * 
 */
package adm.Activities;

import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;

import adm.Image.ImageItem;
import adm.Image.ImageResponse;
import adm.Place.Place;
import adm.Place.PlaceItem;
import adm.Place.PlaceResponse;
import adm.Repository.GlobalParameters;
import adm.Repository.ImFeelingLucky;
import adm.Repository.ListViewImFeelingLuckyAdapter;
import adm.Search.SearchMyLocationResponse;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.os.Bundle;
import android.text.Html;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager;
import android.widget.AdapterView;
import android.widget.BaseAdapter;
import android.widget.Gallery;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

/**
 * @author AndroIT
 *
 */
public class PlaceActivity extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		// Quitar barra de arriba.
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);
		// Aplicar layout
		setContentView(R.layout.detalle_ciudad);
		
		//Esto en la nueva actividad,despues del super.onCreate
		Bundle extras = getIntent().getExtras();
		int idPlace;
		if(extras !=null)
		{idPlace = extras.getInt("idPlace");}
		else
		{
			//idPlace = -1;
			//idPlace = 78688;
			idPlace = 76797;
		}
		
		/*
		//Solicita los detalles de un lugar
		Place place = new Place(GlobalParameters.BASE_URL_JSON);
		ArrayList<Integer> ids = new ArrayList<Integer>();
		//Pasamos como id "78688", para probar (Valencia)
		//ids.add(new Integer(78688));
		ids.add(new Integer(idPlace));
		try
		{
			//PlaceResponse resp = place.detail(ids, GlobalParameters.API_KEY);
			PlaceResponse resp = place.detail(ids, GlobalParameters.API_KEY);
			ArrayList<PlaceItem> items = resp.getResult();
			PlaceItem item = items.get(0);
			
			TextView tvName = (TextView) findViewById(R.id.tvPlaceName);
			TextView tvDesc = (TextView) findViewById(R.id.tvPlaceDescription);
			tvName.setText(item.getName());
			tvDesc.setText(Html.fromHtml(item.getDesc()), TextView.BufferType.SPANNABLE);
		}
		catch(Exception e)
		{
			e.printStackTrace();
			TextView tvResult = (TextView) findViewById(R.id.tvPlaceDescription);
			tvResult.setText("ERROR\n" + e.getMessage());
		}
		*/
		
		//AsyncTask de Place
		AsyncTaskPlace task = new AsyncTaskPlace(this);
		task.execute(new Integer(idPlace));
	}

	
	/**
	 * AsyncTaskSearchLocation
	 * 
	 * @author AndroIT
	 */
	private class AsyncTaskPlace
			extends
				AsyncTask<Integer, PlaceResponse, Void> {

		// ProgressDialog
		final ProgressDialog dialog ;
		final Context context;
		private Place place;

		public AsyncTaskPlace(Context cont)
		{
			this.context = cont;
			this.dialog = ProgressDialog.show(context,
					context.getString(R.string.cargando), context
					.getString(R.string.obtInfoServer), true);
		}

		@Override
		protected Void doInBackground(Integer... idPlaces) {
			dialog.setCancelable(false);
			dialog.show();
			
			//Solicita los detalles de un lugar
			place = new Place(GlobalParameters.BASE_URL_JSON);
			ArrayList<Integer> ids = new ArrayList<Integer>();
			//Pasamos como id "78688", para probar (Valencia)
			//ids.add(new Integer(78688));
			ids.add(idPlaces[0]);
			try
			{
				PlaceResponse resp = place.detail(ids, GlobalParameters.API_KEY);
				if(resp.getResult() != null)
				{
					//Envio a publicar la info
					publishProgress(resp);
				}
					
			} catch (Exception e) {
				Toast.makeText(getApplicationContext(), e.toString(), 3000);
			}

			return null;
		}

		@Override
		protected void onProgressUpdate(PlaceResponse... responses) {
			PlaceResponse resp = responses[0];
			
			//MUESTRA DATOS DEL LUGAR
			ArrayList<PlaceItem> items = resp.getResult();
			PlaceItem item = items.get(0);
			
			TextView tvName = (TextView) findViewById(R.id.tvPlaceName);
			TextView tvDesc = (TextView) findViewById(R.id.tvPlaceDescription);
			tvName.setText(item.getName());
			tvDesc.setText(Html.fromHtml(item.getDesc()), TextView.BufferType.SPANNABLE);
			
			//PASA A RECORRER IMAGENES
			ImageResponse imgresp = null;
			try {
				imgresp = place.pictures(item.getId(), "MEDIUM", 0, 5, GlobalParameters.API_KEY);
			} catch (Exception e) {
				Toast.makeText(getApplicationContext(), e.toString(), 3000);
			}
			if(imgresp.getResult() != null)
			{
			    Gallery gallery = (Gallery) findViewById(R.id.glPlaceImages);
			    gallery.setAdapter(new ImageAdapter(this.context, imgresp.getResult().getPics()));
			    /*gallery.setOnItemClickListener(new OnItemClickListener() {
			        public void onItemClick(AdapterView parent, View v, int position, long id) {
			            Toast.makeText(PlaceActivity.this, "" + position, Toast.LENGTH_SHORT).show();
			        }
			    });*/
			}
		}

		@Override
		protected void onPostExecute(Void result) {
			runOnUiThread(new Runnable() {
				public void run() {
					dialog.dismiss();
				}
			});
		}
	}

	public class ImageAdapter extends BaseAdapter {
	    //int mGalleryItemBackground;
	    private Context mContext;
	    private ArrayList<ImageItem> images;
	    /*private Integer[] mImageIds = {
	            R.drawable.sample_1,
	            R.drawable.sample_2,
	            R.drawable.sample_3,
	            R.drawable.sample_4,
	            R.drawable.sample_5,
	            R.drawable.sample_6,
	            R.drawable.sample_7
	    };*/

	    public ImageAdapter(Context c, ArrayList<ImageItem> imgs) {
	        mContext = c;
	        //TypedArray attr = mContext.obtainStyledAttributes(R.styleable.HelloGallery);
	        //mGalleryItemBackground = attr.getResourceId(R.styleable.HelloGallery_android_galleryItemBackground, 0);
	        images = imgs;
	        //attr.recycle();
	    }

	    public int getCount() {
	        //return mImageIds.length;
	    	return images.size();
	    }

	    public Object getItem(int position) {
	        return position;
	    }

	    public long getItemId(int position) {
	        return position;
	    }

	    public View getView(int position, View convertView, ViewGroup parent) {
	        //ImageView imageView = new ImageView(mContext);
	        //imageView.setImageResource(mImageIds[position]);
	        //imageView.setLayoutParams(new Gallery.LayoutParams(150, 100));
	        //imageView.setScaleType(ImageView.ScaleType.FIT_XY);
	        //imageView.setBackgroundResource(mGalleryItemBackground);
	        
            ImageView i = new ImageView(mContext);
            
            try {
                                /* Open a new URL and get the InputStream to load data from it. */
                                URL aURL = new URL(images.get(position).getUrl());
                                URLConnection conn = aURL.openConnection();
                                conn.connect();
                                InputStream is = conn.getInputStream();
                                BufferedInputStream bis = new BufferedInputStream(is);
                                /* Decode url-data to a bitmap. */
                                Bitmap bm = BitmapFactory.decodeStream(bis);
                                bis.close();
                                is.close();
                                /* Apply the Bitmap to the ImageView that will be returned. */
                                i.setImageBitmap(bm);
                        } catch (IOException e) {
                                i.setImageResource(R.drawable.noimage);
                                Log.e("DEBUGTAG", "Remtoe Image Exception", e);
                        }
           
            /* Image should be scaled as width/height are set. */
            //i.setScaleType(ImageView.ScaleType.FIT_CENTER);
            i.setScaleType(ImageView.ScaleType.FIT_XY);
            /* Set the Width/Height of the ImageView. */
            i.setLayoutParams(new Gallery.LayoutParams(150, 150));
            return i;
	    }
	}
}
